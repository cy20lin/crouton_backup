description   "Crouton Chroot Sommelier daemon"
author        "Chien-Yu Lin <github/cy20lin>"

start on start-user-session   # 4th - starts when the user logs in - DEFAULT
stop on stopping ui or starting halt or starting reboot

env DELAY=1             # delay desired number of seconds before starting ##
env CHROOT=xenial       # enter desired chroot to start                   ##
env CHROOT_APP="~/.spacemacs.d/bin/start-sommelier"
                        # enter desired chroot application to run         ##
env DEBUG=on
env CROUTON_DIR="/usr/local"


script

    PID="$$"
    LOG_FILE="/tmp/${UPSTART_JOB}-${PID}.log"
    touch "${LOG_FILE}"

    ## For output, use 'grep $PID /var/log/messages'
    LOGGER="logger -p local3.info -t ${UPSTART_JOB}(${PID})"

    trap "$LOGGER '### Exiting...'" EXIT

    if [ "$DEBUG" = 'on' ]; then
        exec >> "${LOG_FILE}" 2>&1
        set -x
        $LOGGER "*** DEBUGGING turned ON."
        $LOGGER "*** See '${LOG_FILE}' for output."
    else
        $LOGGER "*** DEBUGGING is OFF."
    fi

    CROUTON_BIN="${CROUTON_DIR}/bin"
    CROUTON_CHROOTS="${CROUTON_DIR}/chroots"

    while true ; do 
        sudo enter-chroot bash -c 'test -x ~/.spacemacs.d/bin/start-sommelier' || exit 255
        sudo "${CROUTON_BIN}/enter-chroot" \
            -c "${CROUTON_CHROOTS}" \
            -n "${CHROOT}" \
            bash --login -c '~/.spacemacs.d/bin/start-sommelier'
        sleep "${DELAY}"
        # FIXME:
        # sommelier would fail while suspending and resuming
        # TODO:
        # Add condition for breaking loop
        # While sommelier is not exit while resumed 
    done


    if [ "$DEBUG" = "on" ]; then
        set +x
    fi
end script

#respawn limit 10 1
