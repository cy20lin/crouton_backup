# Copyright (c) 2012 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "mount CROUTON on /var/crouton"
author          "drinkcat & DennisLfromGA"

start on starting boot-services
task
script
    # Exits the script with return code $1, spitting out message $@ to stderr
    error() {
        local ecode="$1"
        shift
        echo "$*" 1>&2
        exit "$ecode"
    }
    
    # Find the root device
    # Sets:
    #  - $ROOTDEVICE as the root device (e.g. /dev/sda or /dev/mmcblk0)
    #  - $ROOTDEVICEPREFIX as a prefix for partitions (/dev/sda, /dev/mmcblk0p)
    findrootdevice() {
        ROOTDEVICE="`rootdev -d -s`"
        CHROOTDEVICE=
        CHROOTDEVICEPREFIX=
    
        if [ -z "$ROOTDEVICE" ]; then
            error 1 "Cannot find root device."
        fi
    
        if [ ! -b "$ROOTDEVICE" ]; then
            error 1 "$ROOTDEVICE is not a block device."
        fi
    
        # If $ROOTDEVICE ends with a number (e.g. mmcblk0), partitions are named
        # ${ROOTDEVICE}pX (e.g. mmcblk0p1). If not (e.g. sda), they are named
        # ${ROOTDEVICE}X (e.g. sda1).
        ROOTDEVICEPREFIX="$ROOTDEVICE"
        if [ "${ROOTDEVICE%[0-9]}" != "$ROOTDEVICE" ]; then
            ROOTDEVICEPREFIX="${ROOTDEVICE}p"
            CHROOTDEVICEPREFIX=/dev/mmcblk1p
            CHROOTDEVICE=/dev/mmcblk1
        else
            CHROOTDEVICEPREFIX=/dev/mmcblk0p
            CHROOTDEVICE=/dev/mmcblk0
        fi
    }
    
    # Define CROUTON mountpoint
    MOUNTCROUTON='/var/crouton'
    # Try to mount the CROUTON partition, if it exists, on $MOUNTCROUTON.
    mountcrouton() {
        if [ -z "$ROOTDEVICE" ]; then
            findrootdevice
        fi
    
        CHROOTLABEL=Linux
        local croutonpart="`sudo cgpt find -n -l "$CHROOTLABEL" "$CHROOTDEVICE"`"
        if [ -z "$croutonpart" ]; then
            croutonpart=3
            # return 1
        fi
    
        # Check if crouton is mounted already
        # if grep -q "^${CHROOTDEVICEPREFIX}$croutonpart " /proc/mounts; then
            # If mounted, it must be mounted to $mountpoint
    
            if ! grep -q "^${CHROOTDEVICEPREFIX}$croutonpart $MOUNTCROUTON " \
                                                            /proc/mounts; then
                # error 1 "Error: CROUTON partition is not mounted on $MOUNTCROUTON."
                true
            else
                PRIOR=' already'
                #return 0
            fi

        # else 
            sudo mkdir -p "$MOUNTCROUTON" # || error 1 "Cannot create $MOUNTCROUTON."
            sudo mount "${CHROOTDEVICEPREFIX}$croutonpart" "$MOUNTCROUTON" # || error 1 "Cannot mount $MOUNTCROUTON"
            sudo mkdir -p /usr/local/chroots
            sudo chown chronos:chronos /usr/local/chroots
            sudo mount --bind /var/crouton/chroots /usr/local/chroots
            # sudo mkdir -p /media/removable/Linux && sudo mount --bind /var/crouton /media/removable/Linux
            # sudo mkdir -p /media/removable
            # sudo ln -s /var/crouton /media/removable/Linux
        # fi
        return 0
    }

    # Now mount the CROUTON partition
    mountcrouton
end script
