# Copyright (c) 2016 The crouton Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

## Filename: /etc/init/crouton.conf
## NOTE: 'rootfs' verification needs to be removed.

## crouton chroot - Start session
##
## This will start a (crouton) chroot Desktop Environment session

description   "Crouton Chroot Session daemon"
author        "github/DennisLfromGA"

## Choose when the crouton chroot will be started - 4 choices below -
## NOTE: use only 1, prepend the others with the remark character: #

#start on starting ui          # 1st - starts when the user interface begins
                               #     + only 1 chroot will run in this mode

#start on started ui           # 2nd - starts when the user interface appears
                               #     + only 1 chroot will run in this mode

#start on login-prompt-visible # 3rd - starts when the login screen appears
                               #     + only 1 chroot will run in this mode

 start on start-user-session   # 4th - starts when the user logs in - DEFAULT
                               #     + multiple chroots could run in this mode

stop on stopping ui or starting halt or starting reboot

env DELAY=0             # delay desired number of seconds before starting ##
env CHROOT=xenial       # enter desired chroot to start                   ##
env DEBUG=on
env CROUTON_DIR="/usr/local"


script

    PID="$$"
    LOG_FILE="/tmp/${UPSTART_JOB}-${PID}.log"
    touch "${LOG_FILE}"

    ## For output, use 'grep $PID /var/log/messages'
    LOGGER="logger -p local3.info -t ${UPSTART_JOB}(${PID})"

    trap "$LOGGER '### Exiting...'" EXIT

    if [ "$DEBUG" = 'on' ]; then
        exec >> "${LOG_FILE}" 2>&1
        set -x
        $LOGGER "*** DEBUGGING turned ON."
        $LOGGER "*** See '${LOG_FILE}' for output."
    else
        $LOGGER "*** DEBUGGING is OFF."
    fi

    CROUTON_BIN="${CROUTON_DIR}/bin"
    CROUTON_CHROOTS="${CROUTON_DIR}/chroots"

    sudo "${CROUTON_BIN}/enter-chroot" \
        -c "${CROUTON_CHROOTS}" \
        -n "${CHROOT}" \
        sleep infinity

    if [ "$DEBUG" = "on" ]; then
        set +x
    fi
end script

respawn limit 10 1